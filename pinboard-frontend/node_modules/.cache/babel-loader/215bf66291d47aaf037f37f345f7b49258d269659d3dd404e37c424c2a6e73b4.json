{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suki\\\\Desktop\\\\pinboard\\\\pinboard-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { getCurrentUser } from '../services/authService';\n\n// 创建认证上下文\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// 创建认证提供者组件\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // 从本地存储加载用户\n    const user = getCurrentUser();\n    setCurrentUser(user);\n    setLoading(false);\n  }, []);\n\n  // 提供登录、注销和用户信息更新方法\n  const login = (userData, token) => {\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('token', token);\n    setCurrentUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n  };\n  const updateUser = userData => {\n    localStorage.setItem('user', JSON.stringify(userData));\n    setCurrentUser(userData);\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    updateUser,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n// 创建自定义 Hook 以便在组件中使用\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","getCurrentUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","user","login","userData","token","localStorage","setItem","JSON","stringify","logout","removeItem","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/suki/Desktop/pinboard/pinboard-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { getCurrentUser } from '../services/authService';\r\n\r\n// 创建认证上下文\r\nconst AuthContext = createContext();\r\n\r\n// 创建认证提供者组件\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // 从本地存储加载用户\r\n    const user = getCurrentUser();\r\n    setCurrentUser(user);\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // 提供登录、注销和用户信息更新方法\r\n  const login = (userData, token) => {\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    localStorage.setItem('token', token);\r\n    setCurrentUser(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  const updateUser = (userData) => {\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    setCurrentUser(userData);\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// 创建自定义 Hook 以便在组件中使用\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,cAAc,QAAQ,yBAAyB;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,IAAI,GAAGX,cAAc,CAAC,CAAC;IAC7BQ,cAAc,CAACG,IAAI,CAAC;IACpBD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,KAAK,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;IACjCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;IACtDE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpCN,cAAc,CAACK,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnBJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;IAC/BL,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAChCZ,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMa,UAAU,GAAIR,QAAQ,IAAK;IAC/BE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;IACtDL,cAAc,CAACK,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMS,KAAK,GAAG;IACZf,WAAW;IACXK,KAAK;IACLO,MAAM;IACNE,UAAU;IACVZ;EACF,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAChCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAArB,EAAA,CA5CaF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA6CzB,OAAO,MAAMyB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAO/B,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;AAAC2B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}